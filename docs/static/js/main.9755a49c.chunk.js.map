{"version":3,"sources":["context/favoritesContext.js","components/Navbar.js","components/Pagination.js","helpers/api.js","components/Pokemon.js","components/Pokedex.js","components/Searchbar.js","App.js","reportWebVitals.js","index.js"],"names":["FavoriteContext","React","createContext","favoritePokemons","updateFavoritePokemon","id","FavoriteProvider","Provider","Navbar","useContext","alt","src","className","length","Pagination","props","onLeftClick","onRightClick","page","totalPages","onClick","searchPokemon","pokemon","a","url","fetch","response","json","data","getPokemons","limit","offset","getPokemonData","Pokemon","useState","frontImage","setFrontImage","heart","includes","name","changePokemonImage","onMouseOver","onMouseOut","sprites","front_default","back_default","types","map","type","idx","e","preventDefault","Pokedex","pokemons","setPage","total","loading","nextPage","Math","max","min","Searchbar","setPokemons","search","setSearch","prevState","placeholder","onChange","target","value","App","setTotal","setLoading","favorites","setFavorites","fetchPokemons","params","promises","results","Promise","all","ceil","count","console","log","useEffect","updated","isFavorite","indexOf","splice","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9755a49c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FavoriteContext = React.createContext({\r\n    favoritePokemons: [],\r\n    updateFavoritePokemon: (id) => null\r\n})\r\n\r\nexport const FavoriteProvider = FavoriteContext.Provider;\r\n\r\nexport default FavoriteContext;","import React, { useContext } from 'react'\r\nimport FavoriteContext from '../context/favoritesContext';\r\n\r\n\r\nexport const Navbar = () => {\r\n    let imageURL = \"https://raw.githubusercontent.com/PokeAPI/media/master/logo/pokeapi_256.png\";\r\n    const { favoritePokemons } = useContext(FavoriteContext)  \r\n    return (\r\n        <nav>\r\n            <div/>\r\n            <div>\r\n                <img alt=\"pokeapi-logo\" src={imageURL} className=\"navbar-image\" />\r\n            </div>  \r\n            <div>&#10084;&#65039; <span className=\"hearts-counter\">{favoritePokemons.length}</span></div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Pagination = (props) => {\r\n\r\n    const { onLeftClick, onRightClick, page, totalPages} = props;\r\n\r\n    return (\r\n        <div className=\"pagination\">\r\n            <button onClick={onLeftClick}><span>👈</span></button>\r\n            <div className=\"pagination-total-pages\">{page} de {totalPages}</div>\r\n            <button onClick={onRightClick}><span>👉</span></button>\r\n        </div>\r\n    )\r\n}\r\n","export const searchPokemon = async (pokemon) => {\r\n    try {\r\n        let url = `https://pokeapi.co/api/v2/pokemon/${pokemon}`\r\n        const response = await fetch(url)\r\n        const data = await response.json()\r\n        return data\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const getPokemons = async (limit = 25, offset = 0) => {\r\n    try {\r\n        let url = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`\r\n        const response = await fetch(url)\r\n        const data = await response.json()\r\n        return data\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const getPokemonData = async (url) => {\r\n    try {\r\n        const response = await fetch(url)\r\n        const data = await response.json()\r\n        return data\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n","import React, { useContext, useState } from \"react\";\r\nimport FavoriteContext from \"../context/favoritesContext\";\r\nimport { getPokemons } from \"../helpers/api\";\r\n\r\nexport const Pokemon = (props) => {\r\n  const { pokemon = {} } = props; \r\n\r\n  const { favoritePokemons, updateFavoritePokemon } = useContext(FavoriteContext)\r\n\r\n  const [frontImage, setFrontImage] = useState(true)\r\n\r\n  const redHeart = \"❤️\";\r\n  const blackHeart = \"🖤\";\r\n\r\n  const heart = favoritePokemons.includes(pokemon.name) ? redHeart : blackHeart\r\n\r\n  const clickHeart = (e) => {\r\n    e.preventDefault()\r\n    updateFavoritePokemon(pokemon.name)\r\n  }\r\n\r\n  const changePokemonImage = () => {\r\n    setFrontImage(!frontImage)\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"pokemon-card animate__animated animate__fadeIn\">\r\n      <div className=\"pokemon-img-container \">\r\n        <img onMouseOver={changePokemonImage} onMouseOut={changePokemonImage} className=\"pokemon-img\" src={frontImage ? pokemon.sprites.front_default : pokemon.sprites.back_default } alt={pokemon.name} />\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"card-top\">\r\n          <h3>{pokemon.name}</h3>\r\n          <div>#{pokemon.id}</div>\r\n        </div>\r\n        <div className=\"card-bottom\">\r\n          <div className=\"pokemon-type\">\r\n            {pokemon.types.map((type, idx) => {\r\n              return <div key={idx} className={`pokemon-type-text ${type.type.name}`}>{type.type.name}</div>;\r\n            })}\r\n          </div>\r\n          <button className=\"button-heart\" onClick={clickHeart}>\r\n            <div className=\"pokemon-favorite\">{heart}</div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { Pagination } from './Pagination';\r\nimport { Pokemon } from './Pokemon';\r\n\r\nexport const Pokedex = (props) => {\r\n    const { pokemons = [], page, setPage, total, loading } = props;\r\n\r\n    const lastPage = () => {\r\n        const nextPage = Math.max(page - 1, 0)\r\n        setPage(nextPage)\r\n    }\r\n\r\n    const nextPage = () => {\r\n        const nextPage = Math.min(page + 1, total)\r\n        setPage(nextPage)\r\n    }\r\n  \r\n    return (\r\n        <div >\r\n            <div className=\"header\">\r\n                <img className=\"pokedex-img\" src=\"https://cdn.bulbagarden.net/upload/4/4b/Pok%C3%A9dex_logo.png\" />\r\n                <div>\r\n                    <Pagination \r\n                    page={page+1} \r\n                    totalPages={total}\r\n                    onLeftClick={lastPage}\r\n                    onRightClick={nextPage}/>\r\n                </div>\r\n            </div>\r\n            {loading \r\n                ?   <div>Cargando pokemones...</div>\r\n                :   <div className=\"pokedex-grid\">\r\n                        {\r\n                            pokemons.map((pokemon, idx) => {\r\n                                if(pokemon){\r\n                                    return (\r\n                                        <Pokemon pokemon={pokemon} key={pokemon.name} />\r\n                                    )\r\n                                } else {\r\n                                    return (\r\n                                        <div className=\"pokedex-grid-error-message\" key={idx}>No se encontraron resultados</div>\r\n                                    )\r\n                                }\r\n                            })\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { searchPokemon } from '../helpers/api';\r\n\r\nexport const Searchbar = ({setPokemons}) => {\r\n\r\n    const [search, setSearch] = useState(\"\") \r\n  \r\n    const onChange = (e) => { \r\n        setSearch(e.target.value)\r\n    }\r\n    \r\n    const onClick = async (e) => {\r\n        const data = await searchPokemon(search);\r\n        setPokemons(prevState => [data] );\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"searchbar-container\">\r\n            <div className=\"searchbar\">\r\n                <input \r\n                    placeholder=\"Buscar pokemon...\" \r\n                    onChange={onChange}/>\r\n            </div>\r\n            <div className=\"searchbar-btn\">\r\n                <button onClick={onClick}>Buscar</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport { Navbar } from './components/Navbar';\nimport { Pokedex } from './components/Pokedex';\nimport { Searchbar } from './components/Searchbar';\nimport { FavoriteProvider } from './context/favoritesContext';\nimport { getPokemonData, getPokemons } from './helpers/api'\n\nfunction App() {\n\n  const [pokemons, setPokemons] = useState([])\n  const [page, setPage] = useState(0)\n  const [total, setTotal] = useState()\n  const [loading, setLoading] = useState(true)\n  const [favorites, setFavorites] = useState([])\n\n  const fetchPokemons = async (params) => {\n    try {\n      setLoading(true)\n      const data = await getPokemons(25, 25 * page) \n      const promises = data.results.map( async (pokemon) => {\n        return await getPokemonData(pokemon.url)\n      })\n      const results = await Promise.all(promises)\n      setPokemons(results)\n      setLoading(false)\n      setTotal(Math.ceil(data.count / 25))\n      console.log(pokemons);\n    } catch (error) {\n      \n    }\n  }\n  \n\n  useEffect(() => {\n    fetchPokemons()\n  }, [page])\n\n  const updateFavoritePokemons = (name) => {\n    const updated = [...favorites]\n    const isFavorite = favorites.indexOf(name);\n    if (isFavorite >= 0) {\n      updated.splice(isFavorite, 1)\n    } else {\n      updated.push(name)\n    }\n    setFavorites(updated)\n  }\n  \n\n  return (\n    <FavoriteProvider value={{favoritePokemons: favorites, \n    updateFavoritePokemon: updateFavoritePokemons}} >\n      <div>\n        <Navbar/>\n        <div className=\"App\">\n          <Searchbar setPokemons={setPokemons} />\n            <Pokedex \n                loading={loading}\n                pokemons={pokemons}\n                page={page}\n                setPage={setPage}\n                total={total} />\n        </div>\n      </div>\n    </FavoriteProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}